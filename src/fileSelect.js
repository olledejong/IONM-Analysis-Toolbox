window.$ = window.jQuery = require('jquery');

// inform the Main Process that it has to open a file select window
$("#variable-content").on("click", '.file-selectBtn', function() {
    console.log("clicked select-files button");
    ipcRenderer.send("select-file")
});

/**
 * Receive the information of the selected files via message "selected"
 * and display the filenames ( generated by generateFilenames() )
 * @param object IpcRendererEvent, contains all information about the event
 * @param array Contains the paths of all selected files
 */
ipcRenderer.on("selected", function (event, paths) {
    // jQuery selector(s)
    let run_summarize_button = $(".run-summarize");
    // only do something if there are actually files are selected
    if(paths.length !== 0) {
        let finalFileNames = generateFilenames(paths);
        // set text inside the button to selected files
        $(".file-selectBtn").html('The following files were selected:<br>' + finalFileNames);
        run_summarize_button.prop('disabled', false);
        run_summarize_button.css('background-color', '#b33939');
        run_summarize_button.css('cursor', 'pointer');
    }
});

/**
 * For every absolute path in the array paths return its filename
 * @param paths all absolute paths to files
 * @returns {string} a filename followed by a html linebreak
 */
function generateFilenames(paths) {
    let fileNameString = []; let i;
    for (i = 0; i < paths.length; i++) {
        let lastIndex = paths[i].lastIndexOf('\\');
        let substring = paths[i].substring((lastIndex + 1), paths[i].length);
        fileNameString.push(substring);
    }
    return fileNameString.join("<br>");
}